name: Build and release

on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_extension:
    name: Build extension
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Build extension
        run: cd packages/extension && bun run --bun build
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}
          NODE_ENV: production
      - name: Get extension version
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version packages/extension/package.json -r'
      - name: Upload extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: visync-extension
          path: packages/extension/dist/
      - name: Archive extension
        uses: thedoctor0/zip-release@main
        with:
          type: zip
          filename: visync-extension.zip
          path: packages/extension/dist/
      - name: Create draft release
        uses: softprops/action-gh-release@v2.2.1
        if: github.event_name != 'pull_request'
        with:
          files: visync-extension.zip
          draft: true
          tag_name: ${{ steps.version.outputs.value }}
          name: Release ${{ steps.version.outputs.value }}
          body: |
            What's new:
            - 
            What's changed:
            - 
            Bug fixes:
            -
  build_server:
    name: Build and publish server
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tags.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get server version
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version packages/server/package.json -r'
      - name: Determine tags
        id: tags
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            TAG="ghcr.io/theasda/visync-server:pr-${GITHUB_SHA}"
          else
            TAG="ghcr.io/theasda/visync-server:latest ghcr.io/theasda/visync-server:${VALUE}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_SHA: ${{ github.sha }}
          VERSION: ${{ steps.version.outputs.value }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          file: dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tag }}
  update_pr:
    name: Update PR
    runs-on: ubuntu-latest
    needs:
      - build_extension
      - build_server
    steps:
      - name: Create comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Extension published
          message: |
            #### You can try out extension of this pull request.

            Server is available by ${{ jobs.build_server.outputs.tag }}

            Extension is uploaded to pipeline [artifacts](https://github.com/theasda/visync/actions/runs/${{ github.run_id }}#artifacts)
